# copied from:
#   - [超絶便利なGitクライアントのtigのすすめ - Qiita](https://qiita.com/vivid_muimui/items/7e7a740e6537749de0c0#%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%A7enter-diff%E3%83%93%E3%83%A5%E3%83%BC)

# サブビューを横分割にする
set vertical-split = false

# main viewの左端にコミットIDを表示する
set main-view = id date author commit-title:graph=yes,refs=yes

# checkout -b
bind branch B ?git checkout -b "%(prompt Enter new branch name:)" %(branch)
bind main   B ?git checkout -b "%(prompt Enter new branch name: )"

# 差分の前後の表示行数（diff-context)を指定
set diff-context = 4

# reset hard
bind status <Ctrl-r> ?git reset --hard HEAD

# reflogをpagerで表示
bind generic W :!git reflog

# commitハッシュをコピー
# bind generic Y @sh -c "echo %(commit) | xsel -b"
# bind generic y @sh -c "echo %(commit) | head -c 7 | xsel -b"

# push
bind main U ?git poh "%(prompt Enter push branch => )" # poh = push origin HEAD:$1
bind main <Ctrl-u> ?git push --set-upstream origin %(branch)

# rebase
bind main <Ctrl-r> ?git rebase -i %(commit)

# リポジトリのGitHubを表示
bind generic ^ @hub browse

# 選択したbranchのcompare画面
bind branch [ @hub compare %(branch)

# C で commit (refs での C は checkout, main での C は cherry-pick だが上書きする)
bind generic C      !git commit
bind refs    C      !git commit
bind main    C      !git commit

# Alt-c で commit --allow-empty
bind generic <Esc>c !git commit --allow-empty

# + で commit --amend
bind generic +      !git commit --amend --allow-empty

# 不要になったブランチを削除
bind branch d !?git branch -d %(branch)

# F で fetch (default: :toggle file-name / :toggle commit-title-refs)
bind generic F      ?git fetch %(remote)
bind main    F      ?git fetch %(remote)

# Alt-f で :toggle file-name / :toggle commit-title-refs
bind generic <Esc>f :toggle file-name
bind main    <Esc>f :toggle commit-title-refs

# U で pull
bind generic U      ?git pull %(remote)

# Alt-u で該当ブランチを更新
bind main    <Esc>u ?sh -c "git checkout %(branch) && git pull %(remote) --ff-only && git checkout -"
bind diff    <Esc>u ?sh -c "git checkout %(branch) && git pull %(remote) --ff-only && git checkout -"
bind refs    <Esc>u ?sh -c "git checkout %(branch) && git pull %(remote) --ff-only && git checkout -"

# P で remote への push
bind generic P      ?git push -u %(remote) %(repo:head)


